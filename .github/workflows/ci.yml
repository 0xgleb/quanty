name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  nix-checks:
    name: Nix Flake Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Set up Cachix
        uses: cachix/cachix-action@v15
        with:
          name: devenv
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          skipPush: true

      - name: Run flake checks
        run: nix flake check --all-systems

  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Set up Cachix
        uses: cachix/cachix-action@v15
        with:
          name: devenv
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          skipPush: true

      - name: Build Haskell project
        run: nix develop --command stack build --test --no-run-tests

      - name: Run Haskell tests
        run: nix develop --command stack test

      - name: Build frontend
        run: nix develop --command bash -c "cd frontend && npm ci && npm run build"

  format-check:
    name: Format Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Check Haskell formatting
        run: nix develop --command fourmolu --mode check app/ src/ OptionsPricing.hs

      - name: Check Nix formatting
        run: nix develop --command nixpkgs-fmt --check *.nix

      - name: Check frontend formatting
        run: nix develop --command bash -c "cd frontend && npm ci && npx prettier --check 'src/**/*.{js,ts,svelte,json,css,html}'"

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Run HLint
        run: nix develop --command hlint app/ src/ OptionsPricing.hs
